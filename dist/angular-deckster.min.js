!function(e){e.module("angularDeckster.config",[]),e.module("angularDeckster.templates",[]),e.module("angularDeckster.directives",["angularDeckster.config","angularDeckster.controllers"]),e.module("angularDeckster.filters",[]),e.module("angularDeckster.services",[]),e.module("angularDeckster.controllers",["angularDeckster.services"]),e.module("angularDeckster",["angularDeckster.templates","angularDeckster.directives","angularDeckster.filters","angularDeckster.services","angularDeckster.controllers","angularDeckster.config","gridster","ngResource","ngSanitize"]),e.module("angularDeckster.config").provider("decksterConfig",function(){var r={basePath:"/deckster"};return{set:function(t){e.extend(r,t)},$get:function(){return r}}})}(angular),angular.module("angularDeckster.controllers").controller("decksterCardCtrl",["$scope","$compile","$window",function(e,r,t){var a=null,n=!1,c=!1,d=this,i={},l=[];e.expanded=!1,e.loading=!1,e.currentView="summary",e.toggleView=function(){e.currentView="summary"===e.currentView?"details":"summary",d.loadContent(e.currentView)},e.expandCard=function(){e.expanded?d.collapseCard():d.expandCard()},e.reloadCard=function(){d.reloadCard()},e.popoutCard=function(){},e.currentDate=function(){return Date.now()},e.$on("deckster.cards.refresh",function(){d.reloadCard()}),d.setCard=function(e){a=e,d.loadCard()},d.loadCard=function(){d.loadCardSummary(),e.card.isLazy()||d.loadCardDetails()},d.loadCardSummary=function(){e.loading=!0,e.card.getSummaryContent(function(t){var c=a.find(".deckster-summary");c.html(t),r(c.contents())(e),e.loading=!1,n=!0})},d.loadCardDetails=function(){e.loading=!0,e.card.getDetailContent(function(t){var n=a.find(".deckster-detail");n.html(t),r(n.contents())(e),e.loading=!1,c=!0})},d.loadContent=function(e){"summary"!==e||n?c||d.loadCardDetails():d.loadCardSummary()},d.expandCard=function(){var r=angular.element(t),a=Math.floor(r.height()/e.gridsterConfig.curRowHeight);i=angular.copy(e.card.size),l=angular.copy(e.card.position),e.card.size={x:e.gridsterConfig.columns,y:a},e.card.position=[0,0],e.expanded=!0},d.collapseCard=function(){e.card.size=i,e.card.position=l,e.expanded=!1},d.popoutCard=function(){},d.reloadCard=function(){d.loadCard()}}]),angular.module("angularDeckster.controllers").controller("decksterDeckCtrl",["$scope","Card",function(e,r){e.cardList=[],e.cardConfigMap={sizeX:"card.size.x",sizeY:"card.size.y",row:"card.position[0]",col:"card.position[1]",minSizeY:"card.minSizeY",maxSizeY:"card.maxSizeY"},this.initCards=function(t){e.cardList=(t||[]).map(function(e){return new r(e)})},this.reloadCards=function(){e.$broadcast("deckster.cards.refresh")}}]),angular.module("angularDeckster.directives").directive("decksterCard",function(){return{restrict:"EA",replace:!0,require:["^decksterDeck","^gridster","decksterCard"],controller:"decksterCardCtrl",templateUrl:"/deckster-card/card.html",scope:{card:"=cardItem"},link:function(e,r,t,a){var n=(a[0],a[2]);e.gridsterConfig=a[1],n.setCard(r)}}}),angular.module("angularDeckster.directives").directive("decksterDeck",["$rootScope","$parse",function(e,r){var t={gridsterOpts:{columns:5,margins:[10,10],rowHeight:150,draggable:{handle:".deckster-card-header"}}};return{replace:!0,scope:!0,templateUrl:"/deckster-deck/deck.html",controller:"decksterDeckCtrl",link:function(e,a,n,c){e.deckOptions=angular.extend({},t,r(n.deckOptions||{})(e)),n.$observe("deckCards",function(t){var a=r(t||[])(e);c.initCards(a)})}}}]),angular.module("angularDeckster.services").factory("Card",["$http","$templateCache","$q",function(e,r,t){var a={lazyLoad:!0,summaryTemplateUrl:"/deckster-card/default-summary.html",detailTemplateUrl:"/deckster-card/default-detail.html"},n={},c=function(e){this.updateCardConfig(e)};c.prototype.updateCardConfig=function(e){$.extend(!0,this,a,e)},c.prototype.getSummaryContent=function(e){d(this.summaryTemplateUrl).then(function(r){e&&e(r)})},c.prototype.getDetailContent=function(e){d(this.detailTemplateUrl).then(function(r){e&&e(r)})},c.prototype.isLazy=function(){return this.lazyLoad},c.prototype.getTitle=function(){return this.title||this.id||""};var d=function(a){return n[a]?n[a]:n[a]=t.when(r.get(a)||e.get(a)).then(function(e){return angular.isObject(e)?(r.put(a,e.data),e.data):e})};return c}]),function(e){try{e=angular.module("angularDeckster.templates")}catch(r){e=angular.module("angularDeckster.templates",[])}e.run(["$templateCache",function(e){e.put("/deckster-card/card.html",'<div class="deckster-card-inner"><div class="deckster-card-header"><div class="deckster-card-title">{{card.getTitle()}}</div><div class="deckster-card-controls"><span class="deckster-card-control glyphicon glyphicon-refresh" ng-click="reloadCard()"></span> <span class="deckster-card-control glyphicon" ng-class="{\'glyphicon-resize-full\': !expanded, \'glyphicon-resize-small\': expanded}" ng-click="expandCard(); toggleView()"></span> <span class="deckster-card-control thin glyphicon glyphicon-new-window" ng-click="popoutCard()"></span></div></div><div class="deckster-content"><div class="deckster-summary" ng-show="currentView === \'summary\'"></div><div class="deckster-detail" ng-show="currentView === \'details\'"></div></div></div>')}])}(),function(e){try{e=angular.module("angularDeckster.templates")}catch(r){e=angular.module("angularDeckster.templates",[])}e.run(["$templateCache",function(e){e.put("/deckster-card/default-detail.html","<div>This is the detail view of your deckster card. To add your own content set the detailTemplateUrl option in the card options.</div><div>Content loaded: {{currentDate() | date: 'medium'}}</div>")}])}(),function(e){try{e=angular.module("angularDeckster.templates")}catch(r){e=angular.module("angularDeckster.templates",[])}e.run(["$templateCache",function(e){e.put("/deckster-card/default-summary.html","<div>This is the summary view of your deckster card. To add your own content set the summaryTemplateUrl option in the card options.</div><div>Content loaded: {{currentDate() | date: 'medium'}}</div>")}])}(),function(e){try{e=angular.module("angularDeckster.templates")}catch(r){e=angular.module("angularDeckster.templates",[])}e.run(["$templateCache",function(e){e.put("/deckster-deck/deck.html",'<div class="deckster-deck"><div class="deckster-deck-content" gridster="deckOptions.gridsterOpts"><div class="deckster-card" gridster-item="cardConfigMap" ng-repeat="card in cardList"><deckster-card card-item="card"></deckster-card></div></div></div>')}])}();